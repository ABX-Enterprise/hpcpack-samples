//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HelloWorldR2ErrorHandle.EchoService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EchoService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Echo", ReplyAction="http://tempuri.org/IService1/EchoResponse")]
        HelloWorldR2ErrorHandle.EchoService.EchoResponse Echo(HelloWorldR2ErrorHandle.EchoService.EchoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/Echo", ReplyAction="http://tempuri.org/IService1/EchoResponse")]
        System.IAsyncResult BeginEcho(HelloWorldR2ErrorHandle.EchoService.EchoRequest request, System.AsyncCallback callback, object asyncState);
        
        HelloWorldR2ErrorHandle.EchoService.EchoResponse EndEcho(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EchoDelay", ReplyAction="http://tempuri.org/IService1/EchoDelayResponse")]
        HelloWorldR2ErrorHandle.EchoService.EchoDelayResponse EchoDelay(HelloWorldR2ErrorHandle.EchoService.EchoDelayRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/EchoDelay", ReplyAction="http://tempuri.org/IService1/EchoDelayResponse")]
        System.IAsyncResult BeginEchoDelay(HelloWorldR2ErrorHandle.EchoService.EchoDelayRequest request, System.AsyncCallback callback, object asyncState);
        
        HelloWorldR2ErrorHandle.EchoService.EchoDelayResponse EndEchoDelay(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EchoFault", ReplyAction="http://tempuri.org/IService1/EchoFaultResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.DivideByZeroException), Action="http://tempuri.org/IService1/EchoFaultDivideByZeroExceptionFault", Name="DivideByZeroException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.OutOfMemoryException), Action="http://tempuri.org/IService1/EchoFaultOutOfMemoryExceptionFault", Name="OutOfMemoryException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://tempuri.org/IService1/EchoFaultExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IService1/EchoFaultArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentNullException), Action="http://tempuri.org/IService1/EchoFaultArgumentNullExceptionFault", Name="ArgumentNullException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        HelloWorldR2ErrorHandle.EchoService.EchoFaultResponse EchoFault(HelloWorldR2ErrorHandle.EchoService.EchoFaultRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/EchoFault", ReplyAction="http://tempuri.org/IService1/EchoFaultResponse")]
        System.IAsyncResult BeginEchoFault(HelloWorldR2ErrorHandle.EchoService.EchoFaultRequest request, System.AsyncCallback callback, object asyncState);
        
        HelloWorldR2ErrorHandle.EchoService.EchoFaultResponse EndEchoFault(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EchoOnExit", ReplyAction="http://tempuri.org/IService1/EchoOnExitResponse")]
        HelloWorldR2ErrorHandle.EchoService.EchoOnExitResponse EchoOnExit(HelloWorldR2ErrorHandle.EchoService.EchoOnExitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/EchoOnExit", ReplyAction="http://tempuri.org/IService1/EchoOnExitResponse")]
        System.IAsyncResult BeginEchoOnExit(HelloWorldR2ErrorHandle.EchoService.EchoOnExitRequest request, System.AsyncCallback callback, object asyncState);
        
        HelloWorldR2ErrorHandle.EchoService.EchoOnExitResponse EndEchoOnExit(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Echo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class EchoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string input;
        
        public EchoRequest() {
        }
        
        public EchoRequest(string input) {
            this.input = input;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EchoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class EchoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string EchoResult;
        
        public EchoResponse() {
        }
        
        public EchoResponse(string EchoResult) {
            this.EchoResult = EchoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EchoDelay", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class EchoDelayRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int delayMs;
        
        public EchoDelayRequest() {
        }
        
        public EchoDelayRequest(int delayMs) {
            this.delayMs = delayMs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EchoDelayResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class EchoDelayResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int EchoDelayResult;
        
        public EchoDelayResponse() {
        }
        
        public EchoDelayResponse(int EchoDelayResult) {
            this.EchoDelayResult = EchoDelayResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EchoFault", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class EchoFaultRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string exceptionType;
        
        public EchoFaultRequest() {
        }
        
        public EchoFaultRequest(string exceptionType) {
            this.exceptionType = exceptionType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EchoFaultResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class EchoFaultResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string EchoFaultResult;
        
        public EchoFaultResponse() {
        }
        
        public EchoFaultResponse(string EchoFaultResult) {
            this.EchoFaultResult = EchoFaultResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EchoOnExit", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class EchoOnExitRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.TimeSpan delay;
        
        public EchoOnExitRequest() {
        }
        
        public EchoOnExitRequest(System.TimeSpan delay) {
            this.delay = delay;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EchoOnExitResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class EchoOnExitResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string EchoOnExitResult;
        
        public EchoOnExitResponse() {
        }
        
        public EchoOnExitResponse(string EchoOnExitResult) {
            this.EchoOnExitResult = EchoOnExitResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : HelloWorldR2ErrorHandle.EchoService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EchoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EchoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HelloWorldR2ErrorHandle.EchoService.EchoResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HelloWorldR2ErrorHandle.EchoService.EchoResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EchoDelayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EchoDelayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HelloWorldR2ErrorHandle.EchoService.EchoDelayResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HelloWorldR2ErrorHandle.EchoService.EchoDelayResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EchoFaultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EchoFaultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HelloWorldR2ErrorHandle.EchoService.EchoFaultResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HelloWorldR2ErrorHandle.EchoService.EchoFaultResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EchoOnExitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EchoOnExitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HelloWorldR2ErrorHandle.EchoService.EchoOnExitResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HelloWorldR2ErrorHandle.EchoService.EchoOnExitResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<HelloWorldR2ErrorHandle.EchoService.IService1>, HelloWorldR2ErrorHandle.EchoService.IService1 {
        
        private BeginOperationDelegate onBeginEchoDelegate;
        
        private EndOperationDelegate onEndEchoDelegate;
        
        private System.Threading.SendOrPostCallback onEchoCompletedDelegate;
        
        private BeginOperationDelegate onBeginEchoDelayDelegate;
        
        private EndOperationDelegate onEndEchoDelayDelegate;
        
        private System.Threading.SendOrPostCallback onEchoDelayCompletedDelegate;
        
        private BeginOperationDelegate onBeginEchoFaultDelegate;
        
        private EndOperationDelegate onEndEchoFaultDelegate;
        
        private System.Threading.SendOrPostCallback onEchoFaultCompletedDelegate;
        
        private BeginOperationDelegate onBeginEchoOnExitDelegate;
        
        private EndOperationDelegate onEndEchoOnExitDelegate;
        
        private System.Threading.SendOrPostCallback onEchoOnExitCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<EchoCompletedEventArgs> EchoCompleted;
        
        public event System.EventHandler<EchoDelayCompletedEventArgs> EchoDelayCompleted;
        
        public event System.EventHandler<EchoFaultCompletedEventArgs> EchoFaultCompleted;
        
        public event System.EventHandler<EchoOnExitCompletedEventArgs> EchoOnExitCompleted;
        
        public HelloWorldR2ErrorHandle.EchoService.EchoResponse Echo(HelloWorldR2ErrorHandle.EchoService.EchoRequest request) {
            return base.Channel.Echo(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEcho(HelloWorldR2ErrorHandle.EchoService.EchoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEcho(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HelloWorldR2ErrorHandle.EchoService.EchoResponse EndEcho(System.IAsyncResult result) {
            return base.Channel.EndEcho(result);
        }
        
        private System.IAsyncResult OnBeginEcho(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HelloWorldR2ErrorHandle.EchoService.EchoRequest request = ((HelloWorldR2ErrorHandle.EchoService.EchoRequest)(inValues[0]));
            return this.BeginEcho(request, callback, asyncState);
        }
        
        private object[] OnEndEcho(System.IAsyncResult result) {
            HelloWorldR2ErrorHandle.EchoService.EchoResponse retVal = this.EndEcho(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEchoCompleted(object state) {
            if ((this.EchoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EchoCompleted(this, new EchoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EchoAsync(HelloWorldR2ErrorHandle.EchoService.EchoRequest request) {
            this.EchoAsync(request, null);
        }
        
        public void EchoAsync(HelloWorldR2ErrorHandle.EchoService.EchoRequest request, object userState) {
            if ((this.onBeginEchoDelegate == null)) {
                this.onBeginEchoDelegate = new BeginOperationDelegate(this.OnBeginEcho);
            }
            if ((this.onEndEchoDelegate == null)) {
                this.onEndEchoDelegate = new EndOperationDelegate(this.OnEndEcho);
            }
            if ((this.onEchoCompletedDelegate == null)) {
                this.onEchoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEchoCompleted);
            }
            base.InvokeAsync(this.onBeginEchoDelegate, new object[] {
                        request}, this.onEndEchoDelegate, this.onEchoCompletedDelegate, userState);
        }
        
        public HelloWorldR2ErrorHandle.EchoService.EchoDelayResponse EchoDelay(HelloWorldR2ErrorHandle.EchoService.EchoDelayRequest request) {
            return base.Channel.EchoDelay(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEchoDelay(HelloWorldR2ErrorHandle.EchoService.EchoDelayRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEchoDelay(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HelloWorldR2ErrorHandle.EchoService.EchoDelayResponse EndEchoDelay(System.IAsyncResult result) {
            return base.Channel.EndEchoDelay(result);
        }
        
        private System.IAsyncResult OnBeginEchoDelay(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HelloWorldR2ErrorHandle.EchoService.EchoDelayRequest request = ((HelloWorldR2ErrorHandle.EchoService.EchoDelayRequest)(inValues[0]));
            return this.BeginEchoDelay(request, callback, asyncState);
        }
        
        private object[] OnEndEchoDelay(System.IAsyncResult result) {
            HelloWorldR2ErrorHandle.EchoService.EchoDelayResponse retVal = this.EndEchoDelay(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEchoDelayCompleted(object state) {
            if ((this.EchoDelayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EchoDelayCompleted(this, new EchoDelayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EchoDelayAsync(HelloWorldR2ErrorHandle.EchoService.EchoDelayRequest request) {
            this.EchoDelayAsync(request, null);
        }
        
        public void EchoDelayAsync(HelloWorldR2ErrorHandle.EchoService.EchoDelayRequest request, object userState) {
            if ((this.onBeginEchoDelayDelegate == null)) {
                this.onBeginEchoDelayDelegate = new BeginOperationDelegate(this.OnBeginEchoDelay);
            }
            if ((this.onEndEchoDelayDelegate == null)) {
                this.onEndEchoDelayDelegate = new EndOperationDelegate(this.OnEndEchoDelay);
            }
            if ((this.onEchoDelayCompletedDelegate == null)) {
                this.onEchoDelayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEchoDelayCompleted);
            }
            base.InvokeAsync(this.onBeginEchoDelayDelegate, new object[] {
                        request}, this.onEndEchoDelayDelegate, this.onEchoDelayCompletedDelegate, userState);
        }
        
        public HelloWorldR2ErrorHandle.EchoService.EchoFaultResponse EchoFault(HelloWorldR2ErrorHandle.EchoService.EchoFaultRequest request) {
            return base.Channel.EchoFault(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEchoFault(HelloWorldR2ErrorHandle.EchoService.EchoFaultRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEchoFault(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HelloWorldR2ErrorHandle.EchoService.EchoFaultResponse EndEchoFault(System.IAsyncResult result) {
            return base.Channel.EndEchoFault(result);
        }
        
        private System.IAsyncResult OnBeginEchoFault(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HelloWorldR2ErrorHandle.EchoService.EchoFaultRequest request = ((HelloWorldR2ErrorHandle.EchoService.EchoFaultRequest)(inValues[0]));
            return this.BeginEchoFault(request, callback, asyncState);
        }
        
        private object[] OnEndEchoFault(System.IAsyncResult result) {
            HelloWorldR2ErrorHandle.EchoService.EchoFaultResponse retVal = this.EndEchoFault(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEchoFaultCompleted(object state) {
            if ((this.EchoFaultCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EchoFaultCompleted(this, new EchoFaultCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EchoFaultAsync(HelloWorldR2ErrorHandle.EchoService.EchoFaultRequest request) {
            this.EchoFaultAsync(request, null);
        }
        
        public void EchoFaultAsync(HelloWorldR2ErrorHandle.EchoService.EchoFaultRequest request, object userState) {
            if ((this.onBeginEchoFaultDelegate == null)) {
                this.onBeginEchoFaultDelegate = new BeginOperationDelegate(this.OnBeginEchoFault);
            }
            if ((this.onEndEchoFaultDelegate == null)) {
                this.onEndEchoFaultDelegate = new EndOperationDelegate(this.OnEndEchoFault);
            }
            if ((this.onEchoFaultCompletedDelegate == null)) {
                this.onEchoFaultCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEchoFaultCompleted);
            }
            base.InvokeAsync(this.onBeginEchoFaultDelegate, new object[] {
                        request}, this.onEndEchoFaultDelegate, this.onEchoFaultCompletedDelegate, userState);
        }
        
        public HelloWorldR2ErrorHandle.EchoService.EchoOnExitResponse EchoOnExit(HelloWorldR2ErrorHandle.EchoService.EchoOnExitRequest request) {
            return base.Channel.EchoOnExit(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEchoOnExit(HelloWorldR2ErrorHandle.EchoService.EchoOnExitRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEchoOnExit(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HelloWorldR2ErrorHandle.EchoService.EchoOnExitResponse EndEchoOnExit(System.IAsyncResult result) {
            return base.Channel.EndEchoOnExit(result);
        }
        
        private System.IAsyncResult OnBeginEchoOnExit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HelloWorldR2ErrorHandle.EchoService.EchoOnExitRequest request = ((HelloWorldR2ErrorHandle.EchoService.EchoOnExitRequest)(inValues[0]));
            return this.BeginEchoOnExit(request, callback, asyncState);
        }
        
        private object[] OnEndEchoOnExit(System.IAsyncResult result) {
            HelloWorldR2ErrorHandle.EchoService.EchoOnExitResponse retVal = this.EndEchoOnExit(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEchoOnExitCompleted(object state) {
            if ((this.EchoOnExitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EchoOnExitCompleted(this, new EchoOnExitCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EchoOnExitAsync(HelloWorldR2ErrorHandle.EchoService.EchoOnExitRequest request) {
            this.EchoOnExitAsync(request, null);
        }
        
        public void EchoOnExitAsync(HelloWorldR2ErrorHandle.EchoService.EchoOnExitRequest request, object userState) {
            if ((this.onBeginEchoOnExitDelegate == null)) {
                this.onBeginEchoOnExitDelegate = new BeginOperationDelegate(this.OnBeginEchoOnExit);
            }
            if ((this.onEndEchoOnExitDelegate == null)) {
                this.onEndEchoOnExitDelegate = new EndOperationDelegate(this.OnEndEchoOnExit);
            }
            if ((this.onEchoOnExitCompletedDelegate == null)) {
                this.onEchoOnExitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEchoOnExitCompleted);
            }
            base.InvokeAsync(this.onBeginEchoOnExitDelegate, new object[] {
                        request}, this.onEndEchoOnExitDelegate, this.onEchoOnExitCompletedDelegate, userState);
        }
    }
}
